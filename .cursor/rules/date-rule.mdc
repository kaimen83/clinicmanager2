---
description: 
globs: 
alwaysApply: true
---
# 클리닉 관리 시스템 날짜 처리 매뉴얼

## 🕒 시간대 차이 문제 해결 가이드

### 문제 배경
- MongoDB는 날짜 데이터를 UTC 기준으로 저장합니다.
- 한국은 UTC+9 시간대(KST)를 사용하므로 날짜 표시와 조회 시 9시간 차이가 발생할 수 있습니다.
- 이로 인해 특정 날짜에 등록된 데이터가 다른 날짜에 표시되는 문제가 발생합니다.

### 해결 원칙
1. **날짜 생성 시**: 항상 한국 시간(KST)으로 생성
2. **날짜 조회 시**: 한국 시간 기준으로 필터링
3. **날짜 변환 시**: 시간대 차이를 명시적으로 고려
4. **UI 표시 시**: 한국 시간 포맷 사용

### 유틸리티 함수 사용법

1. **`toKstDate(date)`**
   - 입력된 날짜를 한국 시간대로 변환합니다.
   ```typescript
   const kstDate = toKstDate('2025-05-01');
   ```

2. **`toISODateString(date)`**
   - 날짜를 한국 시간 기준 'YYYY-MM-DD' 형식으로 변환합니다.
   - API 요청 시 날짜 파라미터로 사용하세요.
   ```typescript
   const dateString = toISODateString(date);
   ```

3. **`getCurrentKstDate()`**
   - 현재 시간을 한국 시간으로 반환합니다.
   ```typescript
   const now = getCurrentKstDate();
   ```

4. **`createNewDate()`**
   - MongoDB에 저장할 Date 객체를 한국 시간대로 생성합니다.
   ```typescript
   const createdAt = createNewDate();
   ```

### 날짜 필터링 처리 방법

API 엔드포인트에서 날짜 필터링 시 다음 패턴을 따르세요:

```typescript
// 날짜 필터 추가 (날짜의 시작과 끝 시간 설정 - 한국 시간 기준)
if (dateStart) {
  // 시작 날짜: 해당 날짜의 00:00:00 (한국 시간)
  const startParts = dateStart.split('-').map(Number);
  const startDateObj = new Date(startParts[0], startParts[1] - 1, startParts[2], 0, 0, 0, 0);
  
  // 한국 시간과 UTC 간의 시차 조정 (9시간)
  const kstOffset = 9 * 60 * 60 * 1000;
  const startUtc = new Date(startDateObj.getTime() - kstOffset);
  
  searchQuery['date'] = { $gte: startUtc };
}

if (dateEnd) {
  // 종료 날짜: 해당 날짜의 23:59:59.999 (한국 시간)
  const endParts = dateEnd.split('-').map(Number);
  const endDateObj = new Date(endParts[0], endParts[1] - 1, endParts[2], 23, 59, 59, 999);
  
  // 한국 시간과 UTC 간의 시차 조정 (9시간)
  const kstOffset = 9 * 60 * 60 * 1000;
  const endUtc = new Date(endDateObj.getTime() - kstOffset);
  
  searchQuery['date'] = { ...searchQuery['date'], $lte: endUtc };
}
```

### 주의사항

1. **직접 `Date` 객체 생성 금지**
   - 항상 유틸리티 함수(`createNewDate`, `toKstDate`)를 사용하세요.
   - ❌ `new Date()` → ⭕ `createNewDate()`

2. **날짜 문자열 변환 시 주의**
   - `toISOString()`은 UTC 기준으로 변환되므로 사용을 피하세요.
   - ❌ `date.toISOString().split('T')[0]` → ⭕ `toISODateString(date)`

3. **MongoDB 쿼리 시 시간대 고려**
   - 한국 날짜를 기준으로 쿼리할 때는 UTC 변환을 명시적으로 처리하세요.
   - 시작 시간: 해당 일자 00:00:00 KST → UTC로 변환
   - 종료 시간: 해당 일자 23:59:59.999 KST → UTC로 변환

4. **날짜 범위 필터링**
   - 특정 날짜 조회 시 시작과 끝 시간을 정확히 설정하세요.
   - 예: "5월 1일 데이터" = 5월 1일 00:00:00 ~ 5월 1일 23:59:59.999

이 가이드라인을 따르면 시간대 차이로 인한 날짜 필터링 문제를 방지할 수 있습니다.
